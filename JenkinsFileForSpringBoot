pipeline {
    agent any
    tools {
        maven "maven3.6.2"
    }
    stages {
        stage('Compile and Clean') {
            steps {
                sh "mvn clean compile"
            }
        }
        stage('deploy') {
            steps {
                sh "mvn clean -DskipTests=true package"
            }
        }
        stage('ExecuteUnitTest && SonarqubeReport'){
            steps{
                sh "mvn -Dtest=ServiceUnitTest test install sonar:sonar"
            }
        }
        stage('UploadArtifactsintoNexus'){
            steps{
                sh "mvn -DskipTests=true deploy"
            }
        }
     /*  stage('Build Docker image'){
            steps {
                echo "Hello Java Express"
                sh 'ls'
                sh 'docker build -t  kmanubolu/live-execution-dashboard:${BUILD_NUMBER} .'
            }
        }
        stage('Docker Login'){
            steps {
                 withCredentials([string(credentialsId: 'DockerId', variable: 'Dockerpwd')]) {
                    sh "docker login -u kmanubolu -p ${Dockerpwd}"
                }
            }
        }
        stage('Docker Push'){
            steps {
                sh 'docker push kmanubolu/live-execution-dashboard:${BUILD_NUMBER}'
            }
        }
        stage('Docker deploy'){
            steps {
                sh 'docker run -itd -p  8089:8089 kmanubolu/live-execution-dashboard:${BUILD_NUMBER}'
            }
        }
        stage('Archving') {
            steps {
                 archiveArtifacts '**/target/*.jar'
            }
        }
        stage('ExecuteAPIFunctionalTest'){
            steps{
                    sh "mvn -Dtest=IntegrationTest test"
                }
            }
        }*/
        stage('ExecuteUIFunctionalTest'){
            steps{
                script{
                    build job: 'Agile-add',
                    parameters:[
                        [$class: 'StringParameterValue', name: 'Environment', value: 'QA'],
                        [$class: 'StringParameterValue', name: 'Browser', value: 'CH']
                    ]
                }
            }
        }
        stage('ExecutePerformanceTest'){
            steps{
                script{
                    build job: 'live-execution-dashboard-perf-test',
                }
            }
        }
    }
}